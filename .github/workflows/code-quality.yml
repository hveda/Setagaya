name: Code Quality & Security

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  # Go linting and security scanning
  go-quality:
    name: Go Code Quality & Security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./setagaya
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.4'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Verify dependencies
      run: go mod verify
      
    - name: Run go vet
      run: go vet ./...
      
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
      
    - name: Run staticcheck
      run: staticcheck ./...
      
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.60.3
        working-directory: ./setagaya
        args: --timeout=5m
        
    - name: Install gosec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
      
    - name: Run gosec security scanner
      run: gosec -fmt json -out gosec-report.json -exclude-dir=tests ./...
      continue-on-error: true
      
    - name: Upload gosec report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: gosec-report
        path: setagaya/gosec-report.json
        
    - name: Install nancy vulnerability scanner
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        
    - name: Check for known vulnerabilities
      run: go list -json -deps ./... | nancy sleuth
      continue-on-error: true
        
  # Node.js/JavaScript linting and security scanning  
  js-quality:
    name: JavaScript Code Quality & Security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./setagaya
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './setagaya/package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Run security audit
      run: npm audit --audit-level=moderate --json > npm-audit.json
      continue-on-error: true
      
    - name: Upload npm audit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: npm-audit-report
        path: setagaya/npm-audit.json
        
    - name: Check for outdated packages
      run: npm outdated --json > npm-outdated.json || true
      
    - name: Upload outdated packages report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: npm-outdated-report  
        path: setagaya/npm-outdated.json
        
    - name: Run Jest tests
      run: npm test
      continue-on-error: true
      
  # Combined security report
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [go-quality, js-quality]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Security Summary
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        
        if [ -f gosec-report/gosec-report.json ]; then
          echo "### Go Security Issues" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat gosec-report/gosec-report.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f npm-audit-report/npm-audit.json ]; then
          echo "### JavaScript Security Issues" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          head -50 npm-audit-report/npm-audit.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi